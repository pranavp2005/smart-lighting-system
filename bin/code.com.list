EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
code.com -- emu8086 assembler version: 4.08  
 
[ 4/23/2019  --  9:52:07 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .MODEL TINY
[   2]        :                                       
[   3]        :                                       
[   4]    0202: 00 00                                 .DATA
[   5]        :                                       PORTA equ 0000h
[   6]        :                                       PORTB equ 0002h
[   7]        :                                       PORTC equ 0004h
[   8]        :                                       CWREG equ 0006h
[   9]        :                                       
[  10]        :                                       
[  11]    0204:                                       .CODE
[  12]    0204:                                       .STARTUP
[  13]        :                                       
[  14]    0204:                                       init:
[  15]        :                                       ORG  0000h
[  16]        :                                       
[  17]        :                                       ; This register will serve as internal memory and store the number of people in the room.
[  18]    0102: 00 00                                 MOV  dl, 00h
[  19]        :                                       
[  20]        :                                       ; Set up the PPI to read from Port A and write to Port B and Port C.
[  21]    0104: 00 00                                 MOV  al, 10010000b
[  22]    0106: 00 00                                 OUT  CWREG, al
[  23]        :                                       
[  24]        :                                       ; "main" serves as our event loop and the functions check_entry and check_exit will handle the rest.
[  25]    0108:                                       main:
[  26]    0108: 00 00 00                              CALL check_entry
[  27]    010B: 00 00 00                              CALL check_exit
[  28]    010E: 00 00                                 JMP  main
[  29]        :                                       
[  30]        :                                       
[  31]    0110:                                       delay PROC NEAR
[  32]        :                                       ; A small timed delay. The caller should set CX before calling.
[  33]    0110:                                       delay1:
[  34]    0110: 00                                    NOP
[  35]    0111: 00                                    DEC  cx
[  36]    0112: 00 00                                 JNE  delay1
[  37]    0114: 00                                    RET
[  38]        :                                       delay ENDP
[  39]        :                                       
[  40]        :                                       
[  41]    0115:                                       delay_db PROC NEAR
[  42]        :                                       ; A debounce delay mechanism implemented on Port A's pressure sensors (push buttons).
[  43]    0115:                                       delay_db1:
[  44]    0115: 00 00                                 IN   al, PORTA
[  45]    0117: 00 00                                 CMP  al, 0h
[  46]    0119: 00 00                                 JNE  delay_db1
[  47]    011B: 00                                    RET
[  48]        :                                       delay_db ENDP
[  49]        :                                       
[  50]        :                                       
[  51]    011C:                                       incr_cnt PROC NEAR
[  52]        :                                       ; Increase the count value and update the display.
[  53]    011C: 00 00                                 INC  dl;
[  54]    011E: 00 00                                 MOV  al, dl
[  55]    0120: 00 00                                 OUT  PORTC, al
[  56]    0122: 00                                    RET
[  57]        :                                       incr_cnt ENDP
[  58]        :                                       
[  59]        :                                       
[  60]    0123:                                       decr_cnt PROC NEAR
[  61]        :                                       ; Decrease the count value and update the display.
[  62]    0123: 00 00                                 DEC  dl;
[  63]    0125: 00 00                                 MOV  al, dl
[  64]    0127: 00 00                                 OUT  PORTC, al
[  65]    0129: 00                                    RET
[  66]        :                                       decr_cnt ENDP
[  67]        :                                       
[  68]        :                                       
[  69]    012A:                                       open_door PROC NEAR
[  70]        :                                       ; Open the door by turning the stepper motor to 180deg.
[  71]    012A: 00 00                                 MOV  al, 00000001b
[  72]    012C: 00 00                                 OUT  PORTB, al
[  73]    012E: 00                                    RET
[  74]        :                                       open_door ENDP
[  75]        :                                       
[  76]        :                                       
[  77]    012F:                                       close_door PROC NEAR
[  78]        :                                       ; Close the door by turning the stepper motor to 0deg.
[  79]    012F: 00 00                                 MOV  al, 00000010b
[  80]    0131: 00 00                                 OUT  PORTB, al
[  81]    0133: 00                                    RET
[  82]        :                                       close_door ENDP
[  83]        :                                       
[  84]        :                                       
[  85]    0134:                                       check_entry PROC NEAR
[  86]        :                                       ; Check to see if the external pressure sensor has been triggered.
[  87]    0134: 00 00                                 IN   al, PORTA
[  88]    0136: 00 00                                 CMP  al, 00000001b
[  89]    0138: 00 00                                 JNE  check_entry4
[  90]        :                                       
[  91]        :                                       ; Open the door once the external pressure sensor has been triggered.
[  92]    013A: 00 00 00                              CALL open_door
[  93]        :                                       
[  94]        :                                       ; Check to see if the internal pressure sensor has been triggered. Provide a small window of time for entry.
[  95]    013D: 00 00 00                              MOV  cx, 0FFFFh
[  96]    0140:                                       check_entry1:
[  97]    0140: 00 00                                 IN   al, PORTA
[  98]    0142: 00 00                                 CMP  al, 00000010b
[  99]    0144: 00 00                                 JE   check_entry2
[ 100]    0146: 00                                    DEC  cx
[ 101]    0147: 00 00                                 JNZ  check_entry1
[ 102]    0149: 00 00                                 JMP  check_entry3
[ 103]        :                                       
[ 104]    014B:                                       check_entry2:
[ 105]        :                                       ; If the person entered then the count should be incremented.
[ 106]    014B: 00 00 00                              CALL incr_cnt
[ 107]        :                                       
[ 108]    014E:                                       check_entry3:
[ 109]        :                                       ; Close the door.
[ 110]    014E: 00 00 00                              CALL close_door
[ 111]    0151:                                       check_entry4:
[ 112]    0151: 00                                    RET
[ 113]        :                                       check_entry ENDP
[ 114]        :                                       
[ 115]        :                                       
[ 116]    0152:                                       check_exit PROC NEAR
[ 117]        :                                       ; Check to see if the external pressure sensor has been triggered.
[ 118]    0152: 00 00                                 IN   al, PORTA
[ 119]    0154: 00 00                                 CMP  al, 00000010b
[ 120]    0156: 00 00                                 JNE  check_exit4
[ 121]        :                                       
[ 122]        :                                       ; Open the door once the external pressure sensor has been triggered.
[ 123]    0158: 00 00 00                              CALL open_door
[ 124]        :                                       
[ 125]        :                                       ; Check to see if the internal pressure sensor has been triggered. Provide a small window of time for entry.
[ 126]    015B: 00 00 00                              MOV  cx, 0FFFFh
[ 127]    015E:                                       check_exit1:
[ 128]    015E: 00 00                                 IN   al, PORTA
[ 129]    0160: 00 00                                 CMP  al, 00000001b
[ 130]    0162: 00 00                                 JE   check_exit2
[ 131]    0164: 00                                    DEC  cx
[ 132]    0165: 00 00                                 JNZ  check_exit1
[ 133]    0167: 00 00                                 JMP  check_exit3
[ 134]        :                                       
[ 135]    0169:                                       check_exit2:
[ 136]        :                                       ; If the person exited then the count should be decremented.
[ 137]    0169: 00 00 00                              CALL decr_cnt
[ 138]        :                                       
[ 139]    016C:                                       check_exit3:
[ 140]        :                                       ; Close the door.
[ 141]    016C: 00 00 00                              CALL close_door
[ 142]    016F:                                       check_exit4:
[ 143]    016F: 00                                    RET
[ 144]        :                                       check_exit ENDP
[ 145]        :                                       
[ 146]        :                                       END
[ 147]        :                                       
[ 148]        :                                       
[ 149]        :                                       ; POSSIBLE OPTIMIZTIONS:
[ 150]        :                                       ; 1. Use a flag/moniter/semaphore to prevent entry/exit race conditions.
[ 151]        :                                       
 
===================================================================================================
 




===================================================================================================
